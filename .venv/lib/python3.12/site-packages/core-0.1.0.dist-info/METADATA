Metadata-Version: 2.2
Name: core
Version: 0.1.0
Summary: Custom Core for Pytest.
Home-page: https://github.com/yourusername/pytest_core
Author: Diogo Dourado
Author-email: diogo.augusto.dourado@gmail.com
License: MIT
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: selenium==4.29.0
Requires-Dist: webdriver-manager==4.0.2
Requires-Dist: pytest==8.3.4
Requires-Dist: pytest-bdd==8.1.0
Requires-Dist: pytest-html==4.1.1
Dynamic: author
Dynamic: author-email
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Core Plugin for Pytest
The Core Plugin is a custom pytest plugin designed to simplify and enhance test automation workflows. It provides essential fixtures, configurations, and utilities for writing robust and maintainable tests, particularly for web automation using Selenium.

## Features
Pre-configured Selenium WebDriver Fixture: Automatically manages the lifecycle of a WebDriver instance.

Customizable Options: Easily configure browser options and settings. WIP

Session-Scoped Fixtures: Ensures efficient resource management for long-running tests.

Integration with pytest-bdd: Supports Behavior-Driven Development (BDD) testing.

HTML Reporting: Generates detailed HTML test reports using pytest-html.

## Installation

To install the core plugin, use pip:

``` bash
   pip install .    
```
If you're working in a development environment, you can install it in editable mode:

``` bash
   pip install -e .    
```

### Usage
1. Basic Usage
The core plugin provides a driver fixture that can be used in your tests. Here's an example:

python
Copy
# tests/test_example.py
def test_web_search(driver):
    driver.get("https://www.example.com")
    assert "Example" in driver.title
2. Customizing Browser Options
You can customize the browser options by modifying the driver fixture in your conftest.py:

python
Copy
# conftest.py
import pytest
from selenium.webdriver.chrome.options import Options

@pytest.fixture(scope="session")
def driver(request):
    options = Options()
    options.add_argument("--headless")  # Run in headless mode
    options.add_argument("--disable-gpu")
    driver = webdriver.Chrome(options=options)
    yield driver
    driver.quit()
3. Using with pytest-bdd
The core plugin integrates seamlessly with pytest-bdd. Here's an example:

python
Copy
# tests/test_bdd.py
from pytest_bdd import scenarios, given, when, then

scenarios("features/web_search.feature")

@given("I am on the homepage")
def homepage(driver):
    driver.get("https://www.example.com")

@then("the title should contain 'Example'")
def check_title(driver):
    assert "Example" in driver.title
4. Generating HTML Reports
To generate an HTML report, run pytest with the --html option:

bash
Copy
pytest --html=report.html
Configuration
Entry Points
The core plugin is automatically discovered by pytest via the following entry point in setup.py:

python
Copy
entry_points={
    "pytest11": [
        "core = core.plugin",
    ],
}
Fixtures
Fixture	Scope	Description
driver	Session	Provides a WebDriver instance for browser automation.
browser_options	Function	Allows customization of browser options.
Contributing
We welcome contributions! If you'd like to contribute to the core plugin, follow these steps:

Fork the repository.

Create a new branch for your feature or bugfix.

Write tests for your changes.

Submit a pull request.

License
This project is licensed under the MIT License. See the LICENSE file for details.

Support
For questions, issues, or feature requests, please open an issue on the GitHub repository.

Acknowledgments
Selenium: For browser automation.

pytest: For the testing framework.

pytest-bdd: For Behavior-Driven Development support.

pytest-html: For HTML reporting.

Changelog
v0.1.0 (Initial Release)
Added driver fixture for WebDriver management.

Integrated with pytest-bdd and pytest-html.

This README.md provides a clear and concise overview of your core plugin, making it easy for users to get started and contribute. Let me know if you need further adjustments!
